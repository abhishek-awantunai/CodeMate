/**
    Homework - S02 Episode 03
        - Create a repository - ✅
        - Initialize a repository - ✅
        - node_modules, package.json, package-lock.json know about them - ✅
        - Create a .gitignore file - ✅
        - Install express - ✅
        - Create a server - ✅
        - Create a .env file - ✅
        - Create a .gitignore file - ✅
        - Create a server that listens on port 3000 - ✅
        - Create a .env file with PORT=3000 - ✅
        - Install nodemon - ✅
        - Create a script to start the server with nodemon - ✅
        - Write request handlers for /tests and /homework - ✅
        - What are dependencies and devDependencies in package.json? - ✅
            - Dependencies are packages that your application needs to run in production, while devDependencies are packages needed only during development, such as testing frameworks or build tools. - ✅
        - What is the purpose of the .gitignore file? - ✅
            - The .gitignore file specifies files and directories that should not be tracked by Git, such as node_modules, environment variables, and other sensitive or unnecessary files. - ✅
        - What is the purpose of the .env file? - ✅
            - The .env file is used to store environment variables, such as configuration settings and sensitive information, that should not be hardcoded in the application code. - ✅
        - What is the purpose of nodemon? - ✅
            - Nodemon is a development tool that automatically restarts the Node.js server when file changes are detected, making development more efficient. - ✅
        - What is the purpose of the package.json file? - ✅
            - The package.json file is used to manage project dependencies, scripts, and metadata, such as the project name, version, and author. It is essential for Node.js applications to define their dependencies and scripts for running the application. - ✅
        - What is the purpose of the package-lock.json file? - ✅
            - The package-lock.json file is automatically generated when installing dependencies and ensures that the exact versions of dependencies are installed, providing consistency across different environments. It locks the dependency tree to prevent unexpected changes in installed packages. - ✅
        - What is the purpose of the express framework? - ✅
            - Express is a minimal and flexible Node.js web application framework that provides a robust set of features for building web applications and APIs. It simplifies the process of handling HTTP requests, routing, middleware, and more, making it easier to develop server-side applications. - ✅
        - What is the purpose of the app.use(express.json()) middleware? - ✅
            - The app.use(express.json()) middleware is used to parse incoming JSON requests and make the parsed data available in req.body, allowing the server to handle JSON payloads in requests. This is essential for APIs that accept JSON data. - ✅
        - What is the purpose of the app.listen() method? - ✅
            - The app.listen() method is used to start the server and make it listen for incoming requests on a specified port. It initializes the server and allows it to handle HTTP requests from clients. - ✅
        - What is the purpose of the express.json() middleware? - ✅
            - The express.json() middleware is used to parse incoming JSON request bodies, making the data available in req.body for further processing in request handlers. It is essential for handling JSON payloads in API requests. - ✅
        - What is the use of -D, -g while npm install? ✅
            - The -g flag is used to install a package globally, making it available system-wide, while the -D flag (or --save-dev) is used to install a package as a development dependency, meaning it will be listed under devDependencies in package.json and is only needed during development. - ✅
        - What is the difference between dependencies and devDependencies in package.json? - ✅
            - Dependencies are packages required for the application to run in production, while devDependencies are packages needed only during development, such as testing frameworks or build tools. - ✅
        - What is the difference between npm install and npm install -D? - ✅ 
            - npm install installs packages listed in dependencies, while npm install -D installs packages as development dependencies, adding them to the devDependencies section of package.json. - ✅
        - What is the difference between caret and tilde in package.json? - ✅
            - The caret (^) allows minor version updates, meaning it will update to the latest minor version while keeping the major version the same. The tilde (~) allows patch version updates, meaning it will update to the latest patch version while keeping both the major and minor versions the same. - ✅
        - What is the difference between npm install and npm install --save? - ✅
            - npm install installs packages and adds them to the dependencies section of package.json, while npm install --save explicitly adds the package to dependencies, which is the default behavior in newer versions of npm. The --save flag is no longer necessary as npm automatically saves installed packages to dependencies. - ✅
        - What is the difference between npm install and npm install --save-dev? - ✅
            - npm install installs packages and adds them to the dependencies section of package.json, while npm install --save-dev explicitly adds the package to devDependencies, which is used for development purposes only. - ✅
*/
